{
  "name": "Common Ownership",
  "category": "Development",
  "problem": {
    "text": "A single team is tasked with managing all MFEs, which can occur either due to a lack of team division or when teams are segmented based on technical aspects such as data, front-end, and back-end. However, one of the key benefits of MFE architecture is independence, so adopting MFE Architecture without distinct teams to operate independently negates this advantage.",
    "image": "",
    "description": ""
  },
  "example": {
      "text": "A small company chooses to adopt the MFE architecture. Due to the insufficient number of developers, it is not feasible to create teams by domain. So, developers compose a single team responsible for all MFEs. In this scenario, the cost of maintaining different micro frontends is not justified and is only an additional challenge for the development team.",
      "image": "",
      "description": ""
    },
  "solution": {
      "text": "Context should be the defining factor when structuring development teams. Therefore, defining the boundaries of teams and MFEs is essential according to Domain-driven Design (DDD), so a team will be responsible only for MFEs within its domain. Creating shared libraries can facilitate boundary definition and promote greater team independence.",
      "image": "",
      "description": ""
    }
}